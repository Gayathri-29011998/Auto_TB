import configparser
import pytest
import time

import self
from selenium.webdriver.common.by import By

from pageObjects.AdminPage import Adminpage
from pageObjects.ApplyInvestings import ApplyInvest
from pageObjects.ApplyJobs import Applyjob
from pageObjects.OpencloseApplysavedJobs import Opencloseapplysave
from pageObjects.Postinvestiing import Investings
from pageObjects.loginpage import Login
from pageObjects.Postjobs import Jobs
from utilities.readproperties import ReadConfig
from utilities.customLogger import LogGen
import configparser

config = configparser.ConfigParser()
config.read('C:\\Users\\user\\PycharmProjects\\python framework\\configurations\\config.ini')


class Test_Jobs:

    baseURL = ReadConfig.getApplicationURL()
    useremail = ReadConfig.getUseremail()
    password = ReadConfig.getPassword()

    logger = LogGen.loggen()

    #@pytest.mark.sanity
    def test_adminaccessgiven(self, setup):  # Login The Institute Account For given & Update the admin access to individual
        self.logger.info("********** Given & Update The Admin Access College to Individual  Test **********")
        self.driver = setup
        self.driver.get(self.baseURL)
        self.driver.maximize_window()
        self.l = Login(self.driver)
        self.j = Jobs(self.driver)
        self.ad = Adminpage(self.driver)
        self.l.clickSignin()
        time.sleep(1)
        self.ad.typeEmail()
        time.sleep(2)
        self.ad.typepPassword()
        time.sleep(2)
        self.l.clickLogin()
        time.sleep(5)
        self.j.selectionElement()
        time.sleep(3)
        self.l.clickProfiledropdown()
        time.sleep(3)
        self.ad.clickSettings()
        time.sleep(3)
        self.ad.clickAdminPage()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin1.png")
        time.sleep(3)
        self.ad.clickAdminSearch()
        time.sleep(3)
        self.ad.clickAdminSearchAdd()
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin2.png")
        time.sleep(2)

        toast_msg = self.driver.find_elements(By.XPATH, "/html/body/div[1]/div[1]/div/div/div[1]/div[2]")
        result = toast_msg[0].text
        if result == "New Admin Added":
            self.logger.info("Toast Message Is: %s", result)
            assert True
            self.logger.info("*********** New Admin Added Test Passed ***********")
        else:
            assert False
            self.logger.info("*********** New Admin Added Test Failed ***********")

        time.sleep(2)
        self.ad.clickUpdateAdminAccessAccount()
        time.sleep(3)
        self.ad.clickApplyJobAccess()
        time.sleep(3)
        self.ad.clickCreateJobAccess()
        time.sleep(3)
        self.ad.clickApplyPjtAccess()
        time.sleep(3)
        self.ad.clickCreatePjtAccess()
        time.sleep(3)
        self.ad.clickApplyFundAccess()
        time.sleep(3)
        self.ad.clickCreateFundAccess()
        time.sleep(3)
        self.ad.clickApplyInvestAccess()
        time.sleep(3)
        self.ad.clickCreateInvestAccess()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin3.png")
        self.ad.clickSaveAccess()
        time.sleep(2)

        toast_msg = self.driver.find_elements(By.XPATH, "/html/body/div[1]/div[1]/div/div/div[1]/div[2]")
        result = toast_msg[0].text
        if result == "Permissions updated":
            self.logger.info("Toast Message Is: %s", result)
            assert True
            self.logger.info("*********** Permissions updated Test Passed ***********")
        else:
            assert False
            self.logger.info("*********** Permissions updated Test Failed ***********")


        self.logger.info("********** Given The Admin Access - College to Individual  Test Passed Successfully **********")
        self.driver.quit()

    #@pytest.mark.sanity
    def test_adminpage(self, setup):  # Positive Test
        self.logger.info("********** Admin Access - Loyola College Admin Access Check - Individual **********")
        self.driver = setup
        self.driver.get(self.baseURL)
        self.driver.maximize_window()
        self.l = Login(self.driver)
        self.j = Jobs(self.driver)
        self.i = Investings(self.driver)
        self.aj = Applyjob(self.driver)
        self.ad = Adminpage(self.driver)
        self.ai = ApplyInvest(self.driver)
        self.o = Opencloseapplysave(self.driver)
        self.l.clickSignin()
        time.sleep(1)
        self.l.setUsername(self.useremail)
        time.sleep(1)
        self.l.setPassword(self.password)
        time.sleep(1)
        self.l.clickLogin()
        time.sleep(5)
        self.j.selectionElement()
        time.sleep(3)
        self.l.clickProfiledropdown()
        time.sleep(3)
        self.ad.clickAssociatedAccount()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin4.png")
        time.sleep(2)
        self.driver.refresh()
        time.sleep(3)
        self.l.clickProfiledropdown()
        time.sleep(3)
        self.ad.clickIndvidualSettings()
        time.sleep(3)
        self.ad.clickAdminPage()
        time.sleep(3)
        self.ad.clickIndAdminAccessView()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin5.png")
        self.ad.clickHomePageIcon()
        time.sleep(3)
        self.j.selectionElement()
        time.sleep(3)
        self.j.clickJobButton()
        time.sleep(3)
        self.j.clickPostJobButton()
        time.sleep(3)
        self.ad.scrollOnbehalftogglepostjob()
        time.sleep(3)
        self.ad.clickOnbehalftogglepostjob()
        time.sleep(3)
        self.ad.clickOnbehalfofchoosepostjob()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin6.png")
        self.driver.back()
        time.sleep(3)
        self.ad.clickProjects()
        time.sleep(3)
        self.ad.clickPostProjects()
        time.sleep(3)
        self.ad.scrollOnbehalftogglepostpjt()
        time.sleep(3)
        self.ad.clickOnbehalftogglepostpjt()
        time.sleep(3)
        self.ad.clickOnbehalfofchoosepostpjt()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin7.png")
        self.driver.back()
        time.sleep(3)
        self.ad.clickFundraising()
        time.sleep(3)
        self.ad.clickPostFundraising()
        time.sleep(3)
        self.ad.scrollOnbehalftogglepostfund()
        time.sleep(3)
        self.ad.clickOnbehalftogglepostfund()
        time.sleep(3)
        self.ad.clickOnbehalfofchoosepostfund()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin8.png")
        self.driver.back()
        time.sleep(3)
        self.i.clickInvestings()
        time.sleep(3)
        self.i.clickPostInvestingButton()
        time.sleep(3)
        self.ad.scrollOnbehalftogglepostinvest()
        time.sleep(3)
        self.ad.clickOnbehalftogglepostinvest()
        time.sleep(3)
        self.ad.clickOnbehalfofchoosepostinvest()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin9.png")
        self.driver.back()
        time.sleep(3)
        self.j.clickJobButton()
        time.sleep(3)
        self.aj.clickJobApplyButton()
        time.sleep(3)
        self.aj.clickOnbehalfofJobapplytoggle()
        time.sleep(3)
        self.aj.clickOnbehalfchooseone_JobApply()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin10.png")
        self.driver.refresh()
        time.sleep(3)
        self.ad.clickProjects()
        time.sleep(3)
        self.ad.clickApplypjt()
        time.sleep(3)
        self.ad.clickOnbehalfoftoggleApplypjt()
        time.sleep(3)
        self.ad.clickonbehalfofchooseApplypjt()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin11.png")
        self.driver.refresh()
        time.sleep(3)
        self.i.clickInvestings()
        time.sleep(3)
        self.ai.clickPitchButton()
        time.sleep(3)
        self.ai.clickOnbehalfofToggle()
        time.sleep(3)
        self.ai.clickOnbehalfofChoose()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin12.png")
        self.driver.refresh()
        time.sleep(3)

        self.logger.info("******** Individual Account Admin Access Check *********")
        self.logger.info("************** Admin Access Check Test Passed Successfully *************")
        self.driver.quit()

    #@pytest.mark.sanity
    def test_resetadminaccess(self, setup):  # Login The Institute Account For Reset The admin access to individual
        self.logger.info("********** Reset The Admin Access College to Individual  Test **********")
        self.driver = setup
        self.driver.get(self.baseURL)
        self.driver.maximize_window()
        self.l = Login(self.driver)
        self.j = Jobs(self.driver)
        self.ad = Adminpage(self.driver)
        self.l.clickSignin()
        time.sleep(1)
        self.ad.typeEmail()
        time.sleep(2)
        self.ad.typepPassword()
        time.sleep(2)
        self.l.clickLogin()
        time.sleep(5)
        self.j.selectionElement()
        time.sleep(2)
        self.l.clickProfiledropdown()
        time.sleep(3)
        self.ad.clickSettings()
        time.sleep(3)
        self.ad.clickAdminPage()
        time.sleep(3)
        self.ad.clickUpdateAdminAccessAccount()
        time.sleep(3)
        self.ad.clickResetAccess()
        time.sleep(2)

        toast_msg = self.driver.find_elements(By.XPATH, "/html/body/div[1]/div[1]/div/div/div[1]/div[2]")
        result = toast_msg[0].text
        if result == "Permissions updated":
            self.logger.info("Toast Message Is: %s", result)
            assert True
            self.logger.info("*********** Reset Permissions Test Passed ***********")
        else:
            assert False
            self.logger.info("*********** Reset Permissions Test Failed ***********")

        time.sleep(2)

        self.logger.info("********** Given The Admin Access - College to Individual  Test Passed Successfully **********")
        self.driver.quit()

    #@pytest.mark.sanity
    def test_afterresetindadminaccesscheck(self, setup):  # Login the Individual Account for Reseted Admin Check
        self.logger.info("********** Reset Admin Access Check - Individual **********")
        self.driver = setup
        self.driver.get(self.baseURL)
        self.driver.maximize_window()
        self.l = Login(self.driver)
        self.j = Jobs(self.driver)
        self.i = Investings(self.driver)
        self.aj = Applyjob(self.driver)
        self.ad = Adminpage(self.driver)
        self.ai = ApplyInvest(self.driver)
        self.o = Opencloseapplysave(self.driver)
        self.l.clickSignin()
        time.sleep(1)
        self.l.setUsername(self.useremail)
        time.sleep(1)
        self.l.setPassword(self.password)
        time.sleep(1)
        self.l.clickLogin()
        time.sleep(5)
        self.j.selectionElement()
        time.sleep(2)
        self.l.clickProfiledropdown()
        time.sleep(3)
        self.ad.clickAssociatedAccount()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin14.png")
        time.sleep(2)
        self.driver.refresh()
        time.sleep(3)
        self.l.clickProfiledropdown()
        time.sleep(3)
        self.ad.clickIndvidualSettings()
        time.sleep(3)
        self.ad.clickAdminPage()
        time.sleep(3)
        self.ad.clickIndAdminAccessView()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin15.png")
        self.ad.clickHomePageIcon()
        time.sleep(3)
        self.j.selectionElement()
        time.sleep(3)
        self.j.clickJobButton()
        time.sleep(3)
        self.j.clickPostJobButton()
        time.sleep(3)
        self.ad.scrollOnbehalftogglepostjob()
        time.sleep(3)
        self.ad.clickOnbehalftogglepostjob()
        time.sleep(3)
        self.ad.clickOnbehalfofchoosepostjob()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin16.png")
        self.driver.back()
        time.sleep(3)
        self.ad.clickProjects()
        time.sleep(3)
        self.ad.clickPostProjects()
        time.sleep(3)
        self.ad.scrollOnbehalftogglepostpjt()
        time.sleep(3)
        self.ad.clickOnbehalftogglepostpjt()
        time.sleep(3)
        self.ad.clickOnbehalfofchoosepostpjt()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin17.png")
        self.driver.back()
        time.sleep(3)
        self.ad.clickFundraising()
        time.sleep(3)
        self.ad.clickPostFundraising()
        time.sleep(3)
        self.ad.scrollOnbehalftogglepostfund()
        time.sleep(3)
        self.ad.clickOnbehalftogglepostfund()
        time.sleep(3)
        self.ad.clickOnbehalfofchoosepostfund()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin18.png")
        self.driver.back()
        time.sleep(3)
        self.i.clickInvestings()
        time.sleep(3)
        self.i.clickPostInvestingButton()
        time.sleep(3)
        self.ad.scrollOnbehalftogglepostinvest()
        time.sleep(3)
        self.ad.clickOnbehalftogglepostinvest()
        time.sleep(3)
        self.ad.clickOnbehalfofchoosepostinvest()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin19.png")
        self.driver.back()
        time.sleep(3)
        self.j.clickJobButton()
        time.sleep(3)
        self.aj.clickJobApplyButton()
        time.sleep(3)
        self.aj.clickOnbehalfofJobapplytoggle()
        time.sleep(3)
        self.aj.clickOnbehalfchooseone_JobApply()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin20.png")
        self.driver.refresh()
        time.sleep(3)
        self.ad.clickProjects()
        time.sleep(3)
        self.ad.clickApplypjt()
        time.sleep(3)
        self.ad.clickOnbehalfoftoggleApplypjt()
        time.sleep(3)
        self.ad.clickonbehalfofchooseApplypjt()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin21.png")
        self.driver.refresh()
        time.sleep(3)
        self.i.clickInvestings()
        time.sleep(3)
        self.ai.clickPitchButton()
        time.sleep(3)
        self.ai.clickOnbehalfofToggle()
        time.sleep(3)
        self.ai.clickOnbehalfofChoose()
        time.sleep(3)
        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin22.png")
        self.driver.refresh()
        time.sleep(3)

        self.logger.info("******** Individual Account Reseted Admin Access Check *********")
        self.logger.info("************** Reseted Admin Access Check Test Passed Successfully *************")
        self.driver.quit()

    #@pytest.mark.sanity
    def test_deleteadminaccess(self, setup):  # login the college account and delete the access
        self.logger.info("********** Reset The Admin Access College to Individual - Test **********")
        self.driver = setup
        self.driver.get(self.baseURL)
        self.driver.maximize_window()
        self.l = Login(self.driver)
        self.ad = Adminpage(self.driver)
        self.l.clickSignin()
        time.sleep(1)
        self.ad.typeEmail()
        time.sleep(2)
        self.ad.typepPassword()
        time.sleep(2)
        self.l.clickLogin()
        time.sleep(5)
        self.l.clickProfiledropdown()
        time.sleep(3)
        self.ad.clickSettings()
        time.sleep(3)
        self.ad.clickAdminPage()
        time.sleep(3)
        self.ad.clickDeleteAdminAccount()
        time.sleep(3)
        self.ad.clickDeleteAdminYes()
        time.sleep(2)

        toast_msg = self.driver.find_elements(By.XPATH, "/html/body/div[1]/div[1]/div/div/div[1]/div[2]")
        result = toast_msg[0].text
        if result == "Admin access deleted successfully.":
            self.logger.info("Toast Message Is: %s", result)
            assert True
            self.logger.info("*********** Delete The Admin Access  Test Passed ***********")
        else:
            assert False
            self.logger.info("*********** Delete The Admin Access Test Failed ***********")

        self.driver.get_screenshot_as_file(".\\Screenshots\\" + "test_Admin23.png")

        self.logger.info("************** Delete the admin access Test Passed Successfully *************")
        self.driver.quit()











